1. Создать проект Ангуляр:
**/ng new nameProject/**


2. Перейти в папку с проектом:
**/cd nameProject/**


3. Запустить сервер:
**/ng serve/**


4. Утсановить angular Materials:
**/ng add @angular/material **/

5. Перезагрузить сервер.

6. Перейти в : 
src => app => app.component.html => Очистить этот фаил.
(Для проверки написать **<h1>Privet kak dela?</h1>**)

7. Создаем через консоль еще 1 директорию для таблицы:
**/ 

ng generate @angular/material:material-table

material table в данном случае может меняться в зависимости от необходимой таблицы
(**Варианты таблиц смотреть на angular/material**)
    ПОСЛЕ НАПИСАТЬ НАЗВАНИЕ ВО ВСПЛЫВАЮЩЕМ ОКНЕ КОНСОЛИ

8. Проверить данные тамблицы. 
    а) В файле data-table.component.ts должен быть массив с данными таблицы [name, id, ...]
    б) В файле app.modules.ts должны подгрузиться модули
   ***** **************************************************************
   @NgModule({
  declarations: [
    AppComponent,
    DataTableComponent
  ],
  imports: [
    BrowserModule,
    AppRoutingModule,
    BrowserAnimationsModule,
    MatTableModule,
    MatPaginatorModule,
    MatSortModule
  ],
  *********************************************************************
  в) В файле app.component.html прописать selector из файла data.table.component.ts
  ****************************************************************
  @Component({
  selector: 'app-data-table',
  templateUrl: './data-table.component.html',
  styleUrls: ['./data-table.component.css']
})
 ******************************************************************

 9. !!!TABLE IS CREATED!!!


10. Создаем директоиию для кнопок:
/** ng g c buttuns **/

11. Прописываем selector в app.component.html

12. В app.modules.ts необходимо сделать импорт с сайта, вкладка API
******************************************************

import {MatButtonModule} from '@angular/material/button';
import {MatIconModule} from '@angular/material/icon';
*******************************************************
!!! И ДОБАВИТЬ В import MatButtonModule AND MatIconModule !!!

*************************************************************
imports: [
    BrowserModule,
    AppRoutingModule,
    BrowserAnimationsModule,
    MatTableModule,
    MatPaginatorModule,
    MatSortModule,
    MatButtonModule,
    MatIconModule
  ],
  **********************************************************

  13. В buttons.component.html добавляем код с сайта angular/material 
    c вкладки HTML

14. добавляем $event на кнопки
    а) В файле button.component.html прописываем евент
    **************************************************
    <button mat-raised-button color="warn" (click)="delete($event)">Delete</button>
    **************************************************
    б) В файле buttons.component.ts прописываем функцию
    ***************************************************
    deleteOne = new EventEmitter<any>();// Зачем нужно <any> ???
delete($event: MouseEvent){
  console.log('Working delete');
}
    ****************************************************
    в) Повторяем для каждой кнопки.


15. Добавляем собственные заголовки для столбцов таблицу



16. ДОБАВЛЕНИЕ ДАТЫ В ИНМОРТИРОВАННУЮ ТАБЛИЦУ ИЗ АНГУЛЯР МАТЕРИАЛС
  а) В DataTableDataSource в : 
  export interface DataTableItem {
  name: string;
  id: number;
  extension: string,
  size: number,
  isFolder: boolean,
 !!!!!!!!!!!!! time: Date, !!!!!!!!!
  path: string
}
  б) В массиве объектов DataTableItem добавляем 
  time: new  Date к каждму пнукту
  в) в файле HTML :
  <ng-container matColumnDef="time">
      <th mat-header-cell *matHeaderCellDef mat-sort-header>Creat Date</th>
      <td mat-cell *matCellDef="let row">{{row.time.toUTCString()}}</td>
    </ng-container>
    ОБЯЗАТЕЛЬНО В СТРОКЕ ng-container matColumnDef="time"> ПРОПИСАТЬ ПРАВИЛЬНОЕ ЗНАЧЕНИЕ ИЗ МАССИВА
    ИНАЧЕ РАБОТАТЬ НЕ БУДЕТ


  17. Создаем навигационное меню ng g c navigation (НЕ РАЗОБРАЛСЯ КАК СДЕЛАТЬ)

  18. В HTML: 
 
  <div>
    <button mat-button><mat-icon>home</mat-icon></button>
  </div>
  19. Создаем директорию для Диалогового окна
  ** ng g c uploadWindow **

  20. Задаем параметры в upload-window.component.ts 
  *************************************************
    constructor(@Inject(MAT_DIALOG_DATA)public path:string){
}


ngOnInit(): void {
}
****************************************************
21. В Buttons.Component.ts задаем constructor и функцию
*****************************************
constructor( private dialog: MatDialog) {}
openDialog(){
this.dialog.open(UploadWindowComponent, {
  height: '300px',
  width: '500px'
})
*****************************************
22. в HTML файле buttons задаем через онклик функцию 

 <button mat-raised-button color="accent" (click)="openDialog()" >Upload</button>

 23. В файле uploadWindow.ts создаем 
 
  @ViewChild('input')
  fileInput!: any

  24. Пишем функцию 

  titles(){
  this.titlesArr = []

  const files = this.fileInput.nativeElement.files
  if (files){
    for(let i = 0; i < files.length; i++){
      const file = files[i];
      const name = file.name;
      this.titlesArr.push(name)
      
    }
  }
}

25. создаем 

  titlesArr!: string[]

26. Импортируем toolbar и в хайле uploadWindow.html Пишем

<div>
    <mat-toolbar>
        <div class="spacer"></div>
        <button mat-button>
            Back
        </button> 
        
        <button mat-raised-button color="primary">
            Upload
        </button>
    </mat-toolbar>
    <input #input type="file" (change)="titles()" multiple hidden>
    <button mat-button (click)="input.click()">Upload files</button>
    <p *ngFor="let name of titlesArr">{{name}}</p>
</div>

27. .......

28. не разобрался с навигационным меню
29. не разобрался с добавлением папок. Но может еще разберусь
  ПОКА ВСЁ РАБОТАЕТ! (:)